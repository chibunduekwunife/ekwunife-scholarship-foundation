"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv
import dj_database_url
import os
import re  # added for splitting host/origin env vars

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "False").lower() == "true"

# --- ALLOWED_HOSTS / CSRF TRUSTED ORIGINS (secure defaults) ---
ALLOWED_HOSTS_ENV = os.environ.get("ALLOWED_HOSTS", "").strip()
if ALLOWED_HOSTS_ENV:
    ALLOWED_HOSTS = [h for h in re.split(r"[\s,]+", ALLOWED_HOSTS_ENV) if h]
else:
    # Secure fallback list (NO wildcard) – adjust as needed
    ALLOWED_HOSTS = [
        "localhost",
        "127.0.0.1",
        "ekwunife-scholarship-foundation-app.onrender.com",
        "ekwunifescholarship.com",
        "www.ekwunifescholarship.com",
        "ekwunife-scholarship-foundation.vercel.app",
    ]

# Django 4+ requires explicit scheme for CSRF_TRUSTED_ORIGINS
CSRF_TRUSTED_ORIGINS_ENV = os.environ.get("CSRF_TRUSTED_ORIGINS", "").strip()
if CSRF_TRUSTED_ORIGINS_ENV:
    CSRF_TRUSTED_ORIGINS = [o for o in re.split(r"[\s,]+", CSRF_TRUSTED_ORIGINS_ENV) if o]
else:
    CSRF_TRUSTED_ORIGINS = [
        "https://ekwunifescholarship.com",
        "https://www.ekwunifescholarship.com",
        "https://ekwunife-scholarship-foundation.vercel.app",
        "https://ekwunife-scholarship-foundation-app.onrender.com",
    ]
# ...existing code...
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
}
# ...existing code...
# ---------------- CORS CONFIG (locked down) ----------------
CORS_ALLOWED_ORIGINS_ENV = os.environ.get("CORS_ALLOWED_ORIGINS", "").strip()
if CORS_ALLOWED_ORIGINS_ENV:
    CORS_ALLOWED_ORIGINS = [o for o in re.split(r"[\s,]+", CORS_ALLOWED_ORIGINS_ENV) if o]
else:
    CORS_ALLOWED_ORIGINS = [
        "https://ekwunifescholarship.com",
        "https://www.ekwunifescholarship.com",
        "https://ekwunife-scholarship-foundation.vercel.app",
    ]
# Allow preview deployments (optional – regex based, no wildcard *)
CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^https://.*-chibundu-ekwunifes-projects\.vercel\.app$",
]
CORS_ALLOW_CREDENTIALS = True  # corrected name (was CORS_ALLOWS_CREDENTIALS)
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
]
CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"]
# Explicitly disable broad allow-all in production
CORS_ALLOW_ALL_ORIGINS = False